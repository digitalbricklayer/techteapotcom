.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MRTG-MIBHELP 1"
.TH MRTG-MIBHELP 1 "2005-06-19" "2.12.2" "mrtg"
.SH "NAME"
mrtg\-mibhelp \- A Table of some interesting OIDs
.SH "OVERVIEW"
.IX Header "OVERVIEW"
This File Contains a collection of interesting \s-1MIB\s0 Entries ...
mrtg knows about their names ... depending on the \s-1ASN\s0.1 Syntax
you may have to put \fBgauge\fR into the \fBOptions[]:\fR parameter.
.PP
For information about how to create a \fBTarget[]:\fR parameter which
references these \s-1MIB\s0 entries, please consult mrtg-reference.
.SH "MIB LIST"
.IX Header "MIB LIST"
.Sh "ifOperStatus"
.IX Subsection "ifOperStatus"
.Vb 4
\& Descriptor:            ifOperStatus
\& Identifier:            1.3.6.1.2.1.2.2.1.8
\& ASN.1 Syntax:          INTEGER
\& Enumeration:           up 1, down 2, testing 3
.Ve
.PP
The current operational state of the interface.
The \fItesting\fR\|(3) state indicates that no operational
packets can be passed.
.Sh "ifAdminStatus"
.IX Subsection "ifAdminStatus"
.Vb 4
\& Descriptor:            ifAdminStatus
\& Identifier:            1.3.6.1.2.1.2.2.1.7
\& ASN.1 Syntax:          INTEGER
\& Enumeration:           up 1, down 2, testing 3
.Ve
.PP
The current administrative state of the interface.
The \fItesting\fR\|(3) state indicates that no operational
packets can be passed.
.Sh "ifInOctets"
.IX Subsection "ifInOctets"
.Vb 3
\& Descriptor:            ifInOctets
\& Identifier:            1.3.6.1.2.1.2.2.1.10
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The total number of octets received on the
interface, including framing characters.
.Sh "ifInUcastPkts"
.IX Subsection "ifInUcastPkts"
.Vb 3
\& Descriptor:            ifInUcastPkts
\& Identifier:            1.3.6.1.2.1.2.2.1.11
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The number of subnetwork-unicast packets
delivered to a higher-layer protocol.
.Sh "ifInNUcastPkts"
.IX Subsection "ifInNUcastPkts"
.Vb 3
\& Descriptor:            ifInNUcastPkts
\& Identifier:            1.3.6.1.2.1.2.2.1.12
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The number of non-unicast (i.e., subnetwork\-
broadcast or subnetwork\-multicast) packets
delivered to a higher-layer protocol.
.Sh "ifInDiscards"
.IX Subsection "ifInDiscards"
.Vb 3
\& Descriptor:            ifInDiscards
\& Identifier:            1.3.6.1.2.1.2.2.1.13
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The number of inbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being deliverable to a
higher-layer protocol.  One possible reason for
discarding such a packet could be to free up
buffer space.
.Sh "ifInErrors"
.IX Subsection "ifInErrors"
Descriptor:             ifInErrors
Identifier:		1.3.6.1.2.1.2.2.1.14
\&\s-1ASN\s0.1 Syntax:		Counter32
.PP
The number of inbound packets that contained
errors preventing them from being deliverable to a
higher-layer protocol.
.Sh "ifInUnknownProtos"
.IX Subsection "ifInUnknownProtos"
Descriptor:             ifInUnknownProtos
Identifier:		1.3.6.1.2.1.2.2.1.15
\&\s-1ASN\s0.1 Syntax:		Counter32
.PP
The number of packets received via the interface
which were discarded because of an unknown or
unsupported protocol.
.Sh "ifOutOctets"
.IX Subsection "ifOutOctets"
Descriptor:             ifOutOctets
Identifier:		1.3.6.1.2.1.2.2.1.16
\&\s-1ASN\s0.1 Syntax:		Counter32
.PP
The total number of octets transmitted out of the
interface, including framing characters.
.Sh "ifOutUcastPkts"
.IX Subsection "ifOutUcastPkts"
.Vb 3
\& Descriptor:             ifOutUcastPkts
\& Identifier:            1.3.6.1.2.1.2.2.1.17
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The total number of packets that higher-level
protocols requested be transmitted to a
subnetwork-unicast address, including those that
were discarded or not sent.
.Sh "ifOutNUcastPkts"
.IX Subsection "ifOutNUcastPkts"
.Vb 3
\& Descriptor:             ifOutNUcastPkts
\& Identifier:            1.3.6.1.2.1.2.2.1.18
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The total number of packets that higher-level
protocols requested be transmitted to a non\-
unicast (i.e., a subnetwork-broadcast or
subnetwork\-multicast) address, including those
that were discarded or not sent.
.Sh "ifOutDiscards"
.IX Subsection "ifOutDiscards"
.Vb 3
\& Descriptor:             ifOutDiscards
\& Identifier:            1.3.6.1.2.1.2.2.1.19
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The number of outbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being transmitted.  One
possible reason for discarding such a packet could
be to free up buffer space.
.Sh "ifOutErrors"
.IX Subsection "ifOutErrors"
.Vb 3
\& Descriptor:             ifOutErrors
\& Identifier:            1.3.6.1.2.1.2.2.1.20
\& ASN.1 Syntax:          Counter32
.Ve
.PP
The number of outbound packets that could not be
transmitted because of errors.
.Sh "ifOutQLen"
.IX Subsection "ifOutQLen"
.Vb 3
\& Descriptor:             ifOutQLen
\& Identifier:            1.3.6.1.2.1.2.2.1.21
\& ASN.1 Syntax:          Unsigned32
.Ve
.PP
The length of the output packet queue (in
packets).
.Sh "frInOctets"
.IX Subsection "frInOctets"
From: Simon Ferrett <simonf@world.net>
.PP
.Vb 2
\& 'frInOctets' => '1.3.6.1.2.1.10.32.2.1.9'
\& 'frOutOctets' => '1.3.6.1.2.1.10.32.2.1.7'
.Ve
.PP
which when used in the form:
.PP
.Vb 1
\& frInOctets.pp.dd&frOutOctets.pp.dd:community@cisco.router
.Ve
.PP
where pp is the physical port that the frame relay pvc is
defined on and dd is the \s-1DLCI\s0 of the pvc gets you the in
and out octets for just that pvc.
.Sh "ifAdminHack and ifOperHack"
.IX Subsection "ifAdminHack and ifOperHack"
The return values of ifAdminStatus and ifOperStatus are not very usefull
for graphing. Use ifOperHack and ifAdminHack instead. They return 1 for
\&\s-1UP\s0 and 0 otherwise.
.PP
Note these are not real \s-1MIB\s0 entities but mrtg hacks
.Sh "PseudoZero and PseudoOne"
.IX Subsection "PseudoZero and PseudoOne"
will return 0 and 1 respectively
.PP
Note these are not real \s-1MIB\s0 entities but mrtg hacks
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias Oetiker <oetiker@ee.ethz.ch>
