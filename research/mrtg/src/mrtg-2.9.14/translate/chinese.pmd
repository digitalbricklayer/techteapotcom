###### PATCHTAG00 ####################################################
###      Simplified Chinese/简体中文
###      => 伽玛果 <gamago@sina.com>
###### PATCHTAG10 ####################################################
  &chinese
###### PATCHTAG20 ####################################################
  'chinese'          => \&chinese,
  '简体中文'         => \&chinese,
###### PATCHTAG30 ####################################################
# Simplified Chinese/简体中文
   'chinese' =>
   "  <HR NOSHADE>
    简体中文汉化
    <NOBR><A HREF=\"http://gamago.heha.com\">伽玛果</A>
  <A HREF=\"mailto:gamago\@sina.com\">
  &lt;gamago\@sina.com&gt;</A></NOBR>",
# the Simplified Chinese string means: "Prepared for languages 
# and translated to Simplified Chinese by"
###### PATCHTAG40 ####################################################
$credits::LOCALE{'简体中文'}=$credits::LOCALE{'SimChinese'};
###### PATCHTAG50 ####################################################
# Simplified Chinese

sub chinese
{
  my($string)=pop(@_);
  my(%translations,%month,%wday);

  my($i,$j);
  my(@dollar,@quux,@foo);

  
  # regexp => replacement string NOTE does not use autovars $1,$2...
  # charset=iso-2022-jp

  %translations =
  (  
     'charset=iso-8859-1'                     => 'charset=gb2312',
     'Maximal 5 Minute Incoming Traffic'      => '5分钟最大流出量',
     'Maximal 5 Minute Outgoing Traffic'      => '5分钟最大流入量',
     'the device'                             => '设备',
     'The statistics were last updated(.*)'   => '上次统计更新时间：$1',
     ' Average\)</B><BR>'                     => ' 平均)</B><BR>',
     '<TD ALIGN=right><SMALL>Average(.*)'     => '<TD ALIGN=right><SMALL>平均值$1',
     '<TD ALIGN=right><SMALL>Max(.*)'         => '<TD ALIGN=right><SMALL>最大值$1',
     '<TD ALIGN=right><SMALL>Current(.*)'     => '<TD ALIGN=right><SMALL>当前值$1',
     'version'                                => '版本',
     '<B>`Daily\' Graph \((.*) Minute'        => '<B>每日图表 ($1 分钟',
     '<B>`Weekly\' Graph \(30 Minute'         => '<B>每周图表 (30 分钟' ,
     '<B>`Monthly\' Graph \(2 Hour'           => '<B>每月图表 (2 小时',
     '<B>`Yearly\' Graph \(1 Day'             => '<B>每年图表 (1 天', 
     'Incoming Traffic in (\S+) per Second'   => '每秒流入量（单位 $1 ）',
     'Outgoing Traffic in (\S+) per Second'   => '每秒流出量（单位 $1 ）',
     'at which time (.*) had been up for(.*)' => '设备 $1 已运作时间： $2 ',
     # '([kMG]?)([bB])/s'                 => '\$1\$2/秒',
     # '([kMG]?)([bB])/min'              => '\$1\$2/分',
     '([kMG]?)([bB])/h'                       => '$1$2/时',
     # 'Bits'                                => 'Bits',
     # 'Bytes'                              => 'Bytes'
     '&nbsp;In:</FONT>'                      => '&nbsp;流入：</FONT>',
     '&nbsp;Out:</FONT>'                     => '&nbsp;流出：</FONT>',
     '&nbsp;Percentage</FONT>'               => '&nbsp;百分比：</FONT>',
     'Ported to OpenVMS Alpha by'             => '移植到 OpenVMS 的是', 
     'Ported to WindowsNT by'                 => '移植到 WindowsNT 的是',
     'and'                                    => '与',
     '^GREEN'                                  => '绿色',
     'BLUE'                                   => '蓝色',
     'DARK GREEN'                             => '墨绿',
     'MAGENTA'                                => '紫色',
     'AMBER'                                  => '琥珀色'
  );

# maybe expansions with replacement of whitespace would be more appropriate
foreach $i (keys %translations)
{
  if($string=~/$i/)
  { 
    (@dollar)=($string=~/()$i/); # I hope this prevents the autovars
    $string=$translations{$i};  # And it only works from $1-$9
    for($j=1;$dollar[$j];$j++)   # s/// doesn't do any good with saved "$1"-exprs.
    {
      @quux=();
      (@quux)=split(/\$$j/,$string);
      $string=$quux[0].$dollar[$j].$quux[1];
    } ; 
    return $string;
  };
};

%wday = 
    (
      'Sunday'    => '星期日',    'Sun' => '日',
      'Monday'    => '星期一',    'Mon' => '一',
      'Tuesday'   => '星期二',    'Tue' => '二',
      'Wednesday' => '星期三',    'Wed' => '三',
      'Thursday'  => '星期四',    'Thu' => '四',
      'Friday'    => '星期五',    'Fri' => '五',
      'Saturday'  => '星期六',    'Sat' => '六' 

    );

%month = 
    (
      'January'   => '一月',    'February'  => '二月',      'March'     => '三月',
      'Jan'       => '１月',    'Feb'       => '２月',      'Mar'       => '３月',
      'April'     => '四月',    'May'       => '五月',      'June'      => '六月', 
      'Apr'       => '４月',    'May'       => '５月',      'Jun'       => '６月',
      'July'      => '七月',    'August'    => '八月',      'September' => '九月', 
      'Jul'       => '７月',    'Aug'       => '８月',      'Sep'       => '９月', 
      'October'   => '十月',    'November'  => '十一月',    'December'  => '十二月', 
      'Oct'       => '10月',    'Nov'       => '11月',      'Dec'       => '12月' 
    );


  @foo=($string=~/(\S+),\s+(\S+)\s+(\S+)(.*)/);
  if( $wday{$foo[0]} && $month{$foo[2]} )
    {
	if($foo[3]=~(/(.*)at(.*)/))
      { 
        @quux=split(/at/,$foo[3]);
#        $foo[3]=$quux[0]." kl.".$quux[1]; 
        $foo[3]=$quux[0];
        $foo[4]=$quux[1]; 
      };
      return "$wday{$foo[0]}  $foo[3]年 $month{$foo[2]} $foo[1]号 "; 
    };

#
# handle two different time/date formats:  
# return "$wday, $mday $month ".($year+1900)." at $hour:$min";
# return "$wday, $mday $month ".($year+1900)." $hour:$min:$sec GMT";
#

# handle nontranslated strings which ought to be translated
# print STDERR "$_\n" or print DEBUG "not translated $_";
# but then again we might not want/need to translate all strings
  
  return $string;

  };
