.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MRTG-NT-GUIDE 1"
.TH MRTG-NT-GUIDE 1 "2006-02-03" "2.13.2" "mrtg"
.SH "NAME"
mrtg\-nt\-guide \- The Windows Guide to MRTG 2.13.2
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Installing \s-1MRTG\s0 on a Windows box is not quite as \*(L"click and point\*(R" as some
might want it to be. But then again, it is not all that difficult if you
follow the instructions below.
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
To get \s-1MRTG\s0 to work on Windows you need the following:
.IP "\(bu" 4
A current copy of Perl.
For Example ActivePerl from 
http://www.activestate.com/Products/Download/Download.plex?id=ActivePerl
.IP "\(bu" 4
The latest version of \s-1MRTG\s0 from
http://people.ee.ethz.ch/~oetiker/webtools/mrtg/pub Look for mrtg\-2.13.2.zip
or better. The archive also contains a precompiled copy of rateup.exe for
Win32.
.SH "INSTALLING"
.IX Header "INSTALLING"
I suggest you do the following from the machine that will be running \s-1MRTG\s0,
which, in this case, is also a web server. All examples are for doing things
to a \s-1LOCAL\s0 machine.
.IP "First" 4
.IX Item "First"
Unzip \s-1MRTG\s0 to C:\emrtg\-2.13.2 on the Windows machine of your choice.
.IP "Next" 4
.IX Item "Next"
Install Perl on the same Windows machine. You might want to make sure
that the Perl binary directory is listed in your system path.
.Sp
.Vb 1
\& C:\ePerl\ebin;%SystemRoot%\esystem32;%SystemRoot%;...
.Ve
.Sp
You can manually check this by going to [Control Panel]\->[System]\->[Environment]
.PP
To see if everything is installed properly you can open a Command Shell
and go into \fIc:\emrtg\-2.13.2\ebin\fR. Type:
.PP
.Vb 1
\& perl mrtg
.Ve
.PP
This should give you a friendly error message complaining about the missing \s-1MRTG\s0
configuration file. Now, you have successfully installed \s-1MRTG\s0 and Perl.
.SH "CONFIGURING MRTG"
.IX Header "CONFIGURING MRTG"
Now it is time to create a configuration for \s-1MRTG\s0. But before we begin you need to know a few things. Take an
opportunity to gather the following information:
.IP "\(bu" 4
The \s-1IP\s0 address or hostname and the \s-1SNMP\s0 port number, (if non standard), of the device you want to monitor.
.IP "\(bu" 4
If you want to monitor something other than bytes in and out, you must also know the \s-1SNMPOID\s0 of what you
want to monitor.
.IP "\(bu" 4
Finally you need to know the read-only \s-1SNMP\s0 community string
for your device. If you don't know it, try \fBpublic\fR, that is the default.
.PP
For the rest of this document we will be using device \fB10.10.10.1\fR ( a \s-1CISCO\s0
Catalyst 5000) with Community string \fBpublic\fR. We are interested in monitoring
traffic, and the \s-1CPU\s0 load. Let's begin.
.PP
The first thing we do in setting up \s-1MRTG\s0 is making a default config file.
Get to a cmd prompt and change to the \fIc:\emrtg\-2.13.2\ebin\fR directory. Type the
following command:
.PP
.Vb 1
\& perl cfgmaker public@10.10.10.1 --global "WorkDir: c:\ewww\emrtg" --output mrtg.cfg
.Ve
.PP
This creates an initial \s-1MRTG\s0 config file for you. Note that in this file all interfaces
of your router will be stored by number. Unfortunately, these numbers are likely to change whenever you
reconfigure your router. In order to work around this you can get \fIcfgmaker\fR to produce a configuration
which is based on Ip numbers, or even Interface Descriptions. Check cfgmaker
.PP
If you get an error message complaining about \fBno such name\fR or \fBno
response\fR, your community name is probably wrong.
.PP
Now, let's take a look at the mrtg.cfg file that was created.
.PP
In Perl, a \f(CW\*(C`#\*(C'\fR is a comment, synonymous with \f(CW\*(C`REM\*(C'\fR in \s-1DOS\s0.
.PP
Add the following to the top of the mrtg.cfg file:
.PP
.Vb 1
\& WorkDir: D:\eInetPub\ewwwroot\eMRTG
.Ve
.PP
This is where the web pages are created, usually a web root.
.PP
.Vb 6
\& ######################################################################
\& # Description: LCP SUWGB
\& # Contact: Administrator
\& # System Name: LC-Bridge
\& # Location: Here
\& #.....................................................................
.Ve
.PP
TargetDevice's \s-1IP\s0 Address:Interface Number:Community:IP Address
.PP
.Vb 1
\& Target[10.10.10.1.1]: 1:public@10.10.10.1
.Ve
.PP
This is the interface speed (Default is 10 megabits; for 100Mbit devices use 12500000 and so on...)
.PP
.Vb 1
\& MaxBytes[10.10.10.1.1]: 1250000
.Ve
.PP
.Vb 1
\& Title[10.10.10.1.1]: LC-Bridge (sample.device): ether0
.Ve
.PP
This section determines how the web page headers will look
.PP
.Vb 9
\& PageTop[10.10.10.1.1]: <H1>Traffic Analysis for ether0</H1>
\&  <TABLE>
\&  <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\&  <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\&  <TR><TD>Interface:</TD><TD>ether0(1)</TD></TR>
\&  <TR><TD>IP:</TD><TD>sample.device(10.10.10.1)</TD></TR>
\&  <TR><TD>Max Speed:</TD>
\&  <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\&  </TABLE>
.Ve
.PP
.Vb 12
\&  Target[10.10.10.1.2]: 2:public@10.10.10.1
\&  MaxBytes[10.10.10.1.2]: 1250000
\&  Title[10.10.10.1.2]: LC-Bridge (): ulink0
\&  PageTop[10.10.10.1.2]: <H1>Traffic Analysis for ulink0</H1>
\&   <TABLE>
\&   <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\&   <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\&   <TR><TD>Interface:</TD><TD>ulink0(2)</TD></TR>
\&   <TR><TD>IP:</TD><TD>()</TD></TR>
\&   <TR><TD>Max Speed:</TD>
\&   <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\&   </TABLE>
.Ve
.PP
.Vb 1
\&  #---------------------------------------------------------------
.Ve
.PP
And that's a very basic \s-1MRTG\s0 config file. You can run this and see your
results by going into the \fIc:\emrtg\-2.13.2\ebin\fR directory and typing:
.PP
.Vb 1
\& perl mrtg mrtg.cfg
.Ve
.PP
It is normal to get errors for the first two times you run this command. The
errors will alert you about the fact that there have not been any log files
in existence before.
.PP
If you take a look at those web pages they are not very exciting (yet). You need
to have the \s-1MRTG\s0 files run every five minutes to produce the desired results.
Just run it again after a few minutes. You should now be able to see the first
lines in your graphs.
.SH "MAKE MRTG RUN ALL THE TIME"
.IX Header "MAKE MRTG RUN ALL THE TIME"
Starting \s-1MRTG\s0 by hand every time you want to run it is not going to make you
happy I guess.
.PP
There is a special option you can set in the \s-1MRTG\s0 configuration file so
so that \s-1MRTG\s0 will not terminate after it was started. Instead it
will wait for 5 minutes and then run again.
.PP
Add the option
.PP
.Vb 1
\& RunAsDaemon: yes
.Ve
.PP
to your mrtg.cfg file and start it with:
.PP
.Vb 1
\& start /Dc:\emrtg-2.13.2\ebin wperl mrtg --logging=eventlog mrtg.cfg
.Ve
.PP
If you use \fBwperl\fR instead of \fBperl\fR, no console window will show. \s-1MRTG\s0 is now
running in the background. If it runs into problems it will tell you so
over the EventLog. To stop \s-1MRTG\s0, open the Task Manager and terminate the
\&\fBwperl.exe\fR process. If mrtg has anything to tell you these messages
can be found in the event log.
.PP
If you put a shortcut with
.PP
.Vb 2
\& Target:    wperl mrtg --logging=eventlog mrtg.cfg
\& Start in:  c:\emrtg-2.13.2\ebin
.Ve
.PP
into your start-up folder, \s-1MRTG\s0 will now start whenever you login to your \s-1NT\s0
box.
.PP
If you do not want to log into your box just to start \s-1MRTG\s0. Have a look
at http://www.firedaemon.com/mrtg\-howto.html which describes a free tool to
start any program as a Service. The pages gives specific instructions for
\&\s-1MRTG\s0 users.
.SH "HOW TO SETUP MRTG AS A WINDOWS SERVICE"
.IX Header "HOW TO SETUP MRTG AS A WINDOWS SERVICE"
.Sh "Additional Prerequisites"
.IX Subsection "Additional Prerequisites"
.IP "\(bu" 4
\&\s-1MRTG\s0 must be installed and fully configured on the target system.  In the
following exercise the assumption is that \s-1MRTG\s0 is installed under c:\emrtg\e
and all the sample files use this location.
.IP "\(bu" 4
Microsoft Tools \fB\s-1SRVANY\s0.exe\fR (Applications as Services Utility) and
\&\fB\s-1INSTSRV\s0.exe\fR (Service Installer) \- Those files can be downloaded from
Microsoft as a part of Windows 2000 Resource Kit at
<http://www.microsoft.com/windows2000/techinfo/reskit/tools/default.asp>. 
They are also available from other locations such as
<http://www.electrasoft.com/srvany/srvany.htm>,
<http://www.iopus.com/guides/srvany.htm>, etc.  Detailed instructions on how
to use this package are available at
<http://support.microsoft.com/kb/q137890/>.  In order to follow the steps in
this HOW-TO you \fB\s-1MUST\s0\fR obtain both executables.
.IP "\(bu" 4
You must have administrative rights on the target system.
.Sh "Preparation"
.IX Subsection "Preparation"
Please complete the following steps before starting the installation:
.IP "\(bu" 4
Copy \fBsrvany.exe\fR and \fBinstsrv.exe\fR to c:\emrtg\ebin\e (your \s-1MRTG\s0 bin directory).
.IP "\(bu" 4
Create a file called \fBmrtg.reg\fR anywhere on your system and paste the
following content into it:
.Sp
.Vb 1
\& Windows Registry Editor Version 5.00
.Ve
.Sp
.Vb 4
\& [HKEY_LOCAL_MACHINE\eSYSTEM\eCurrentControlSet\eServices\eMRTG\eParameters]
\& "Application"="c:\e\eperl\e\ebin\e\ewperl.exe"
\& "AppParameters"="c:\e\emrtg\e\ebin\e\emrtg --logging=eventlog c:\e\emrtg\e\ebin\e\emrtg.cfg"
\& "AppDirectory"="c:\e\emrtg\e\ebin\e\e"
.Ve
.Sh "Service Installation"
.IX Subsection "Service Installation"
Once again, assuming that \s-1MRTG\s0 is already fully installed and configured on
the target system under c:\emrtg\e the following steps are necessary to setup
\&\s-1MRTG\s0 as a service.
.PP
Using the command prompt go into the temporary directory where you unzipped
the package.  When there type the following command to create a service
named \*(L"\s-1MRTG\s0\*(R" in the Windows Services management console:
.PP
.Vb 1
\& instsrv MRTG c:\emrtg\ebin\esrvany.exe
.Ve
.PP
Now you need to create the \fBApp*\fR entries required for the new service.  You
can do this by either right-clicking on the mrtg.reg file and selecting
\&'merge' or by running the following command:
.PP
.Vb 1
\& regedit /s mrtg.reg
.Ve
.PP
After setting up the registry entry it is time to point it to your \s-1MRTG\s0
installation.  If you have installed \s-1MRTG\s0 under \fIc:\emrtg\e\fR, you can skip this
step.  Open your registry editor (Start \-> Run \-> regedt32), and locate the
\&\fB[HKEY_LOCAL_MACHINE\eSYSTEM\eCurrentControlSet\eServices\eMRTG]\fR key.  Make
sure that the \fBImagePath\fR variable is correctly pointing to \fBsrvany.exe\fR
located in your \s-1MRTG\s0 bin directory (for example c:\emrtg\ebin\esrvany.exe). 
Next you have to expand the \s-1MRTG\s0 tree, and go to the
\&\fB[HKEY_LOCAL_MACHINE\eSYSTEM\eCurrentControlSet\eServices\eMRTG\eParameters]\fR
key.  Under Parameters make sure that all the  \fBApplication\fR variables are
setup properly.
.PP
At this point you are ready to run the service.  The only thing left to do
is to start the \s-1MRTG\s0 service in the Services management console.  After you
do this, you should see two new processes running on your system: srvany.exe
and wperl.exe.  Make sure to stop any previously running \s-1MRTG\s0 processes to
avoid conflict.
.PP
Note that it is imperative to set the \fBRunAsDaemon: yes\fR option or the
service will stop after just one single run!
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Now lets look at a config file to monitor what we wanted to on our mythical
Cisco Cat 5000 \*(-- utilization on ports 3, 5, 10, and 24, and the \s-1CPU\s0 Load,
which will show us nonstandard mrtg configurations as well as more options..
.PP
.Vb 2
\& WorkDir: D:\eInetPub\ewwwroot\eMRTG
\& RunAsDaemon: yes
.Ve
.PP
.Vb 6
\& ######################################################################
\& # Description: LCP SUWGB
\& # Contact: Administrator
\& # System Name: LC-Bridge
\& # Location: Here
\& #.....................................................................
.Ve
.PP
.Vb 12
\& Target[10.10.10.1.1]: 3:public@10.10.10.1
\& MaxBytes[10.10.10.1.1]: 1250000
\& Title[10.10.10.1.1]: LC-Bridge (sample-device): ether0
\& PageTop[10.10.10.1.1]: <H1>Traffic Analysis for ether0</H1>
\&  <TABLE>
\& <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\& <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\& <TR><TD>Interface:</TD><TD>ether0(3)</TD></TR>
\& <TR><TD>IP:</TD><TD>sample-device(10.10.10.1)</TD></TR>
\& <TR><TD>Max Speed:</TD>
\& <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\& </TABLE>
.Ve
.PP
.Vb 1
\& #---------------------------------------------------------------
.Ve
.PP
.Vb 12
\& Target[10.10.10.1.2]: 5:public@10.10.10.1
\& MaxBytes[10.10.10.1.2]: 1250000
\& Title[10.10.10.1.2]: LC-Bridge (): ulink0
\& PageTop[10.10.10.1.2]: <H1>Traffic Analysis for ulink0</H1>
\&  <TABLE>
\&  <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\&  <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\&  <TR><TD>Interface:</TD><TD>ulink0(5)</TD></TR>
\&  <TR><TD>IP:</TD><TD>()</TD></TR>
\&  <TR><TD>Max Speed:</TD>
\&  <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\&  </TABLE>
.Ve
.PP
.Vb 1
\& #---------------------------------------------------------------
.Ve
.PP
.Vb 12
\& Target[10.10.10.1.1]: 10:public@10.10.10.1
\& MaxBytes[10.10.10.1.1]: 1250000
\& Title[10.10.10.1.1]: LC-Bridge (sample-device): ether0
\& PageTop[10.10.10.1.1]: <H1>Traffic Analysis for ether0</H1>
\&  <TABLE>
\&  <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\&  <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\&  <TR><TD>Interface:</TD><TD>ether0(10)</TD></TR>
\&  <TR><TD>IP:</TD><TD>sample-device(10.10.10.1)</TD></TR>
\&  <TR><TD>Max Speed:</TD>
\&  <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\&  </TABLE>
.Ve
.PP
.Vb 1
\& #---------------------------------------------------------------
.Ve
.PP
.Vb 12
\& Target[10.10.10.1.2]: 24:public@10.10.10.1
\& MaxBytes[10.10.10.1.2]: 1250000
\& Title[10.10.10.1.2]: LC-Bridge (): ulink0
\& PageTop[10.10.10.1.2]: <H1>Traffic Analysis for ulink0</H1>
\&  <TABLE>
\&  <TR><TD>System:</TD><TD>LC-Bridge inAndover</TD></TR>
\&  <TR><TD>Maintainer:</TD><TD>Administrator</TD></TR>
\&  <TR><TD>Interface:</TD><TD>ulink0(24)</TD></TR>
\&  <TR><TD>IP:</TD><TD>()</TD></TR>
\&  <TR><TD>Max Speed:</TD>
\&  <TD>1250.0 kBytes/s (ethernetCsmacd)</TD></TR>
\&  </TABLE>
.Ve
.PP
.Vb 1
\& #---------------------------------------------------------------
.Ve
.PP
.Vb 18
\& # Router CPU load %
\& Target[cpu.1]:1.3.6.1.4.1.9.2.1.58.0&1.3.6.1.4.1.9.2.1.58.0:public@10.10.10.1
\& RouterUptime[cpu.1]: public@10.10.10.1
\& MaxBytes[cpu.1]: 100
\& Title[cpu.1]: CPU LOAD
\& PageTop[cpu.1]: <H1>CPU Load %</H1>
\& Unscaled[cpu.1]: ymwd
\& ShortLegend[cpu.1]: %
\& XSize[cpu.1]: 380
\& YSize[cpu.1]: 100
\& YLegend[cpu.1]: CPU Utilization
\& Legend1[cpu.1]: CPU Utilization in % (Load)
\& Legend2[cpu.1]: CPU Utilization in % (Load)
\& Legend3[cpu.1]:
\& Legend4[cpu.1]:
\& LegendI[cpu.1]:
\& LegendO[cpu.1]: &nbsp;Usage
\& Options[cpu.1]: gauge
.Ve
.PP
This is a nice example of how to monitor any \s-1SNMP\s0 device if you know what \s-1OID\s0
you want to use. Once again, for an explanation of the more advance features of
mrtg, please see the rest of the documentation.
.SH "AUTHORS"
.IX Header "AUTHORS"
Tobi Oetiker <oetiker@ee.ethz.ch>,
David S. Divins <ddivins@moon.jic.com>,
Steve Pierce <MRTG@HDL.com>,
Artyom Adjemov <one.bofh@gmail.com>,
Ilja Ivanov <ivanov@bseu.by>
Karel Fajkus <karel@fajkus.cz>
