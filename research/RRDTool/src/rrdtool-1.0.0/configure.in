dnl This file is the master file for the configure process.
dnl It is only edited by developers. If you are trying to compile
dnl rrd_tool, use "sh configure" instead of this file.
dnl
dnl From it, config.h.in and configure are both made.
dnl To make them, you (a developer) will need to install the latest
dnl versions of GNU m4 and GNU autoconf. Then you run "autoheader"
dnl in the distribution directory to make config.h.in, and
dnl "autoconf" to make the configure script. These two files
dnl must be shipped with the distribution; end users should not need
dnl m4 and autoconf to be able to compile. All they need is
dnl to run "sh configure".
dnl
dnl The format of this file is basically one macro to a line.
dnl Text that is not a macro and not a comment is passed straight
dnl through to the configure script.
dnl
dnl Comments are "dnl" followed by comments. It means delete
dnl to newline.
dnl
dnl When you want to pass a literal bit of text to a macro as
dnl an argument, you use square brackets. Thus, you cannot use
dnl the bracket shorthand for /bin/test... you must use the
dnl actual program name.
dnl
dnl Our tests do not cache. This is because I'm too lazy to
dnl figure out how to use the caching macros. There's not many,
dnl so it's not a big problem.
dnl
dnl 	-jra

AC_INIT(src/rrd_tool.c)
AC_CONFIG_HEADER(config.h)

dnl Check for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PATH_PROG(PERL, perl, no)

AC_PREFIX_DEFAULT(/usr/local/rrdtool-1.0.0)

dnl Checks for libraries.
AC_CHECK_LIB(m, acos)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h malloc.h unistd.h math.h sys/time.h sys/times.h sys/resource.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME
AC_STRUCT_TM

dnl If CC is not set we assume gcc
if test ${CC-gcc} = gcc; then
  rd_cv_prog_hpcc=no
oCFLAGS_EXTRA=$CFLAGS_EXTRA
CFLAGS_EXTRA="$CFLAGS_EXTRA -Wall -pedantic -fPIC"
AC_CACHE_CHECK(if we can use GCC-specific compiler options, rd_cv_gcc_opt,
[
AC_TRY_COMPILE( , return 0 ,
	 rd_cv_gcc_opt=yes,
	 rd_cv_gcc_opt=no )
])
if test $rd_cv_gcc_opt = no; then
	CFLAGS_EXTRA=$oCFLAGS_EXTRA
fi

else
AC_CACHE_CHECK(if we should use HP compiler options, rd_cv_prog_hpcc,
[
cat > conftest.c <<EOF
#ifdef _HPUX_SOURCE
  yes;
#endif
EOF
if AC_TRY_COMMAND(${CC-cc} -Ae -z -E conftest.c) | egrep yes >/dev/null 2>&1
then
  rd_cv_prog_hpcc=yes
else
  rd_cv_prog_hpcc=no
fi])
fi
if test $rd_cv_prog_hpcc = yes; then
	CFLAGS_EXTRA="$CFLAGS_EXTRA -Ae -z"
fi

dnl Checks for library functions.
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

AC_CHECK_FUNCS(mktime getrusage gettimeofday)

oCFLAGS_EXTRA=$CFLAGS_EXTRA
unset CFLAGS_EXTRA
oCFLAGS=$CFLAGS
unset CFLAGS
AC_CACHE_CHECK([if IEEE math works], rd_cv_ieee_works,
[AC_TRY_RUN([int main(void){
              double a=0.0/0.0;
	      double b=22.0;
	      double c;
              c=b/a;
	      if (!isnan(c)) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>=c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<=c?1.0:0.0;
	      if (c>0.0) return 1;
	      return 0;
             }],
           [rd_cv_ieee_works=yes],[rd_cv_ieee_works=nope],:)])

if test "$rd_cv_ieee_works" != yes ; then
AC_CACHE_CHECK([if IEEE math works with -ieee], rd_cv_ieee_switch,
[CFLAGS=-ieee
export CFLAGS
AC_TRY_RUN([int main(void){
              double a=0.0/0.0;
	      double b=22.0;
	      double c;
              c=b/a;
	      if (!isnan(c)) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>=c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<=c?1.0:0.0;
	      if (c>0.0) return 1;
	      return 0;
             }],
           [rd_cv_ieee_switch=yes],[rd_cv_ieee_switch=nope],:)])

if test "$rd_cv_ieee_works" != yes ; then
AC_CACHE_CHECK([if IEEE math works with fpsetmask(0)], rd_cv_ieee_mask,
[unset CFLAGS
export CFLAGS
AC_TRY_RUN([#include <floatingpoint.h>
	int main(void){

	      double a=0.0/0.0;
	      double b=22.0;
	      double c;
	      fpsetmask(0);
              c=b/a;
	      if (!isnan(c)) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>=c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<=c?1.0:0.0;
	      if (c>0.0) return 1;
	      return 0;
             }],
           [rd_cv_ieee_mask=yes],[rd_cv_ieee_mask=nope],:)])

if test "$rd_cv_ieee_mask" != yes; then
AC_CACHE_CHECK([if IEEE math works with signal(SIGFPE,SIG_IGN)], rd_cv_ieee_sigfpe,
[unset CFLAGS
export CFLAGS
AC_TRY_RUN([#include <signal.h>
	      int main(void){
              double a=0.0/0.0;
	      double b=22.0;
	      double c;
	      signal(SIGFPE,SIG_IGN);
              c=b/a;
	      if (!isnan(c)) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a==c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a>=c?1.0:0.0;
	      if (c>0.0) return 1;
	      c=a<=c?1.0:0.0;
	      if (c>0.0) return 1;
	      return 0;
             }],
           [rd_cv_ieee_sigfpe=yes],[
AC_MSG_RESULT(nope)
echo "--------------------------------------------------------------"
echo "Your Compiler does not do propper IEEE math ... "
echo "Please find out how to make IEEE math work with your Compiler"
echo "and let me know (oetiker@ee.ethz.ch)"
echo "Check config.log to see what went wrong ..."
echo ""
exit 1
],:)])
fi
fi
fi

if test "$rd_cv_ieee_sigfpe" = yes; then
AC_DEFINE(MUST_DISABLE_SIGFPE)
fi
if test "$rd_cv_ieee_mask" = yes; then
AC_DEFINE(MUST_DISABLE_FPMASK)
fi
CFLAGS_EXTRA=$oCFLAGS_EXTRA
CFLAGS=$oCFLAGS

if test x$rd_cv_ieee_switch = xyes; then
	CFLAGS_EXTRA="$CFLAGS_EXTRA -ieee"
fi

AC_SUBST(CFLAGS_EXTRA)
AC_SUBST(CFLAGS)

AC_OUTPUT(Makefile src/Makefile libpng-1.0.3/Makefile zlib-1.1.3/Makefile gd1.3/Makefile cgilib-0.4/Makefile doc/GNUmakefile examples/shared-demo.pl examples/piped-demo.pl examples/cgi-demo.cgi, [chmod +x examples/*.cgi examples/*.pl ])

AC_MSG_CHECKING(in)
AC_MSG_RESULT(and out again)

echo $ac_n "ordering CD from http://cdnow.com/gift/oetiker@ee.ethz.ch $ac_c" 1>&6
sleep 1
echo $ac_n ".$ac_c" 1>&6
sleep 1
echo $ac_n ".$ac_c" 1>&6
sleep 1
echo $ac_n ".$ac_c" 1>&6
sleep 1
echo $ac_n ".$ac_c" 1>&6
sleep 1
AC_MSG_RESULT([ just kidding ;-)])
echo
echo "----------------------------------------------------------------"
echo "Config is DONE!"
echo
echo "Type 'make' to compile the software and use 'make install' to "
echo "install everything to $prefix "
echo 
echo "       ... that wishlist mentioned above does realy exist. So if"
echo "you feel like showing your appreciation for rrdtool this is the"
echo "place to go. :-)"
echo 
echo "                            -- Tobi Oetiker <oetiker@ee.ethz.ch>"
echo "----------------------------------------------------------------"
